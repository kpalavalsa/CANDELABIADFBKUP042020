{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "CANDELABIADF"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"DataControlMaster_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataControlMaster'"
		},
		"logstore_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'logstore'"
		},
		"ADLSSTAGE_REM_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@concat(item().SourceObjectName,'.txt')"
		},
		"ADLSSTAGE_REM_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat(item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().ADLSPreProcessedPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://CANDELABIKV.vault.azure.net/"
		},
		"DataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://candelabiadls.dfs.core.windows.net"
		},
		"Salesforce_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "azureapi@candelamedical.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataQualityChecker_Rule')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List the Rules",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT *\n  FROM [BI].[DataQualityRules] Where Isactive=1"
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DQTableLoop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List the Rules",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List the Rules').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DataQualityTable",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DataQualityChecker_Table",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"PipelineRunId": {
												"value": "@pipeline().parameters.PipelineRunId",
												"type": "Expression"
											},
											"Id": {
												"value": "@item().Id",
												"type": "Expression"
											},
											"RuleName": {
												"value": "@item().DQRuleName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"PipelineRunId": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ObjectsList')]",
				"[concat(variables('factoryId'), '/pipelines/DataQualityChecker_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataQualityChecker_Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[DQTableExpressions]",
								"storedProcedureParameters": {
									"DQRId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.Id",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForAllDQTables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ListTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ListTables').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "OracleSource",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().SourceServer,'Oracle')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "OracleLookup",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@item().SourceExpression",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "DQDataControlMaster",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								},
								{
									"name": "SalesForceSource",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().SourceServer,'SalesForce')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SalesForceLookup",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SalesforceSource",
														"query": {
															"value": "@item().SourceExpression",
															"type": "Expression"
														},
														"readBehavior": "query"
													},
													"dataset": {
														"referenceName": "Salesforce_Source",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								},
								{
									"name": "TargetLookUp",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@if(equals(item().TargetExpression,'NULL'),'SELECT NULL',item().TargetExpression)",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DQTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "DimLookup",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@if(equals(item().DimExpression,'NULL'),'SELECT -1 as Counts',item().DimExpression)",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DQTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "FactLookup",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@if(equals(item().FactExpression,'NULL'),'SELECT -1 As Counts',item().FactExpression)",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DQTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"PipelineRunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"Id": {
						"type": "string",
						"defaultValue": "-1"
					},
					"RuleName": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ObjectsList')]",
				"[concat(variables('factoryId'), '/datasets/DQTarget')]",
				"[concat(variables('factoryId'), '/datasets/DQDataControlMaster')]",
				"[concat(variables('factoryId'), '/datasets/Salesforce_Source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CANDELAKPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Combination of Oracle and Salesforce data load",
				"activities": [
					{
						"name": "Oracle_Full_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_FULL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Oracle_Incremental_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Incremental"
							}
						}
					},
					{
						"name": "Salesforce_Full_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_AZSQLDB_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Salesforce_Incremental_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_SALESFORCE_AZSSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Incremental"
							}
						}
					},
					{
						"name": "SalesForce_DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Salesforce_Incremental_Load",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Salesforce_Full_Load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Oracle_DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Oracle_Incremental_Load",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Oracle_Full_Load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORACLE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ProcessAAS",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "SalesForce_DataModel",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Oracle_DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('PROCESSAAS?modelname=','CANDELAKPI&ProcessName=',pipeline().Pipeline,'&RunId=',pipeline().RunId)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "ProcessAAS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log31",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Processing AAS Model is completed successfully",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log32",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('ProcessAAS').Error.Message,0,if(greater(length(activity('ProcessAAS').Error.Message),1990),1990,sub(length(activity('ProcessAAS').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Process AAS Model",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EmailNotification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_FULL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_AZSQLDB_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_SALESFORCE_AZSSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORACLE_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/linkedServices/ProcessAAS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/linkedServices/EmailService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CANDELAKPI_INCREMENTAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Combination of Oracle and Salesforce data load",
				"activities": [
					{
						"name": "Oracle_Full_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_FULL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Oracle_Incremental_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Incremental"
							}
						}
					},
					{
						"name": "Salesforce_Full_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_AZSQLDB_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Salesforce_Incremental_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_SALESFORCE_AZSSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Incremental"
							}
						}
					},
					{
						"name": "SalesForce_DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Salesforce_Incremental_Load",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Salesforce_Full_Load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_INCREMENTAL_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Oracle_DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Oracle_Incremental_Load",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Oracle_Full_Load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORACLE_INCREMENTAL_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ProcessAAS",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "SalesForce_DataModel",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Oracle_DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('PROCESSAAS?modelname=','CANDELAKPI&ProcessName=',pipeline().Pipeline,'&RunId=',pipeline().RunId)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "ProcessAAS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log31",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Processing AAS Model is completed successfully",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log32",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('ProcessAAS').Error.Message,0,if(greater(length(activity('ProcessAAS').Error.Message),1990),1990,sub(length(activity('ProcessAAS').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Process AAS Model",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EmailNotification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_FULL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_AZSQLDB_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_SALESFORCE_AZSSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_INCREMENTAL_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORACLE_INCREMENTAL_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/linkedServices/ProcessAAS')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/linkedServices/EmailService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FULL_ORACLE_AZSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For Saleforce schema",
				"activities": [
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Process is Started",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FetchTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select SourceSchemaName,SourceObjectName,ObjectType,'['+TargetSchemaName+'].['+TargetObjectName+']' as TargetObjectName, ADLSPreProcessedPath, ADLSProcessedPath, blobLogsPath,convert(varchar,getdate(),112) as Today,CHECKSUMCOLUMNS,ContainerName From bi.MM_ObjectsList where SourceServer='Oracle' and IsActive = 1 and LoadType='FULL' "
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Tables to Process are listed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('FetchTables').Error.Message,0,if(greater(length(activity('FetchTables').Error.Message),1990),1990,sub(length(activity('FetchTables').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Listing Tables To Process is Failed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEveryActiveObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Log2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FetchTables').Output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "OracleToBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatControlMaster_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "OracleToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('OracleToBlob').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data To Blob Storage For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "OracleToBlob",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('OracleToBlob').Error.Message,0,if(greater(length(activity('OracleToBlob').Error.Message),1990),1990,sub(length(activity('OracleToBlob').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data To Blob Storage is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ADLSToSQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "@{concat('TRUNCATE TABLE ',item().TargetObjectName)} ",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatControlMaster_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TARGET_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('ADLSToSQL').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data From Blob Storage To SQL For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": {
													"value": "@if(equals(activity('ADLSToSQL').output.rowsCopied,0),'NA',activity('ADLSToSQL').output.redirectRowPath)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log7",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('ADLSToSQL').Error.Message,0,if(greater(length(activity('ADLSToSQL').Error.Message),1990),1990,sub(length(activity('ADLSToSQL').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data From Blob Storage To SQL is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MoveFileToProcessedFolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log6",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSPROCESSED",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log9",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied File From PreProcessed Folder to Processed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log10",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('MoveFileToProcessedFolder').Error.Message,0,if(greater(length(activity('MoveFileToProcessedFolder').Error.Message),1990),1990,sub(length(activity('MoveFileToProcessedFolder').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying File From PreProcessed To Processed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DeleteFileFromPreProcessedPath",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log9",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSSTAGE_REM",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "Log11",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('File is deleted from PreProcessed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log12",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('DeleteFileFromPreProcessedPath').Error.Message,0,if(greater(length(activity('DeleteFileFromPreProcessedPath').Error.Message),1990),1990,sub(length(activity('DeleteFileFromPreProcessedPath').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Deleting file from PreProcessed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"LoadType": {
						"type": "string",
						"defaultValue": "Full"
					}
				},
				"variables": {
					"t1": {
						"type": "String",
						"defaultValue": "test"
					}
				},
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/ObjectsList')]",
				"[concat(variables('factoryId'), '/datasets/DatControlMaster_Source')]",
				"[concat(variables('factoryId'), '/datasets/ADLSStage')]",
				"[concat(variables('factoryId'), '/datasets/TARGET_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ADLSPROCESSED')]",
				"[concat(variables('factoryId'), '/datasets/ADLSSTAGE_REM')]",
				"[concat(variables('factoryId'), '/linkedServices/logstore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INCREMENTAL_ORACLE_AZSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For Saleforce schema",
				"activities": [
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Process is Started",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FetchTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "declare @Today datetime=getutcdate()\nselect INC.IncKeyName,INC.IncValue,SourceSchemaName,SourceObjectName,ObjectType,'['+TargetSchemaName+'_STAGE].['+TargetObjectName+']' as TargetObjectName, ADLSPreProcessedPath, ADLSProcessedPath, BlobLogsPath,convert(varchar,@Today,112)+'/'+replace(convert(varchar, @Today, 8),':','') as Today,CHECKSUMCOLUMNS \n,case when INC.INCVALUE is null then '' else 'Where '+  INC.INCKEYNAME+' >= '''+ Convert(Varchar,INC.INCVALUE ,121) + ''' AND ' + INC.INCKEYNAME + ' < ''' + Convert(Varchar,@Today,121) + '''' END AS WhereCondition \n,Convert(Varchar,@Today,121) AS TimeNow,INC.OBJECTSLISTID,OL.ContainerName\nFrom bi.MM_ObjectsList  OL\nINNER join bi.MM_INCREMENTALKEYS INC on INC.objectslistid=OL.ID and INC.type='UPD' and INC.ISACTIVE=1\nwhere OL.SourceServer='Oracle' and OL.IsActive = 1 and OL.LOADTYPE='INCREMENTAL' "
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Tables to Process are listed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('FetchTables').Error.Message,0,if(greater(length(activity('FetchTables').Error.Message),1990),1990,sub(length(activity('FetchTables').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Listing Tables To Process is Failed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEveryActiveObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Log2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FetchTables').Output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "OracleToBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName,' ',item().WhereCondition)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatControlMaster_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "OracleToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('OracleToBlob').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data To Blob Storage For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "OracleToBlob",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('OracleToBlob').Error.Message,0,if(greater(length(activity('OracleToBlob').Error.Message),1990),1990,sub(length(activity('OracleToBlob').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data To Blob Storage is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ADLSToSQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName,' ',item().WhereCondition)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "@{concat('Truncate Table ',item().TargetObjectName)}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatControlMaster_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TARGET_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('ADLSToSQL').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data From Blob Storage To SQL For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": {
													"value": "@if(equals(activity('ADLSToSQL').output.rowsCopied,0),'NA',activity('ADLSToSQL').output.redirectRowPath)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log7",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('ADLSToSQL').Error.Message,0,if(greater(length(activity('ADLSToSQL').Error.Message),1990),1990,sub(length(activity('ADLSToSQL').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data From Blob Storage To SQL is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MoveFileToProcessedFolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log13",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSPROCESSED",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log9",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied File From PreProcessed Folder to Processed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log10",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('MoveFileToProcessedFolder').Error.Message,0,if(greater(length(activity('MoveFileToProcessedFolder').Error.Message),1990),1990,sub(length(activity('MoveFileToProcessedFolder').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying File From PreProcessed To Processed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DeleteFileFromPreProcessedPath",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log9",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSSTAGE_REM",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "Log11",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('File is deleted from PreProcessed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log12",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('DeleteFileFromPreProcessedPath').Error.Message,0,if(greater(length(activity('DeleteFileFromPreProcessedPath').Error.Message),1990),1990,sub(length(activity('DeleteFileFromPreProcessedPath').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Deleting file from PreProcessed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log13",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStageToOriginal",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Updated Incremental Key Value For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log14",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStageToOriginal",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('LoadStageToOriginal').Error.Message,0,if(greater(length(activity('LoadStageToOriginal').Error.Message),1990),1990,sub(length(activity('LoadStageToOriginal').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Load data from Stage table to Original table is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LoadStageToOriginal",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log6",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[LOAD_DATA_STAGE_TO_ORIGINAL]",
										"storedProcedureParameters": {
											"INCVALUE": {
												"value": {
													"value": "@item().TimeNow",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJECTLISTID": {
												"value": {
													"value": "@item().OBJECTSLISTID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"LoadType": {
						"type": "string",
						"defaultValue": "Incremental"
					}
				},
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/ObjectsList')]",
				"[concat(variables('factoryId'), '/datasets/DatControlMaster_Source')]",
				"[concat(variables('factoryId'), '/datasets/ADLSStage')]",
				"[concat(variables('factoryId'), '/datasets/TARGET_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ADLSPROCESSED')]",
				"[concat(variables('factoryId'), '/datasets/ADLSSTAGE_REM')]",
				"[concat(variables('factoryId'), '/linkedServices/logstore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INCREMENTAL_SALESFORCE_AZSSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For Saleforce schema",
				"activities": [
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Process is Started",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FetchTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\ndeclare @Today datetime=getutcdate()\nselect INC.IncKeyName,INC.IncValue,SourceSchemaName,SourceObjectName,ObjectType,'['+TargetSchemaName+'_STAGE].['+TargetObjectName+']' as TargetObjectName, ADLSPreProcessedPath, ADLSProcessedPath, BlobLogsPath,convert(varchar,@Today,112)+'/'+replace(convert(varchar, @Today, 8),':','') as Today,CHECKSUMCOLUMNS \n,case when INC.INCVALUE is null then '' else 'Where '+  INC.INCKEYNAME+' >= '+ concat(substring(replace(convert(varchar,INC.INCVALUE,121),' ','T'),1,19),'Z') + ' AND ' + INC.INCKEYNAME + ' < ' + concat(substring(replace(convert(varchar,@Today,121),' ','T'),1,19),'Z') + '' END AS WhereCondition \n,concat(substring(replace(convert(varchar,@Today,121),' ','T'),1,19),'Z')  AS TimeNow,INC.OBJECTSLISTID,OL.ContainerName\nFrom bi.MM_ObjectsList  OL\nINNER join bi.MM_INCREMENTALKEYS INC on INC.objectslistid=OL.ID and INC.type='UPD' and INC.ISACTIVE=1\nwhere OL.SourceServer='Salesforce' and OL.IsActive = 1 and OL.LOADTYPE='INCREMENTAL'"
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Tables to Process are listed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('FetchTables').Error.Message,0,if(greater(length(activity('FetchTables').Error.Message),1990),1990,sub(length(activity('FetchTables').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Listing Tables To Process is Failed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEveryActiveObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Log2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FetchTables').Output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SalesforceToBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName,' ',item().WhereCondition)",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Salesforce_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SalesforceToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data To Blob Storage For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SalesforceToBlob",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('SalesforceToBlob').Error.Message,0,if(greater(length(activity('SalesforceToBlob').Error.Message),1990),1990,sub(length(activity('SalesforceToBlob').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data To Blob Storage is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ADLSToSQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName,' ',item().WhereCondition)",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "@{concat('Truncate Table ',item().TargetObjectName)}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Salesforce_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TARGET_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('ADLSToSQL').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data From Blob Storage To SQL For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": {
													"value": "@if(equals(activity('ADLSToSQL').output.rowsCopied,0),'NA',activity('ADLSToSQL').output.redirectRowPath)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log7",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('ADLSToSQL').Error.Message,0,if(greater(length(activity('ADLSToSQL').Error.Message),1990),1990,sub(length(activity('ADLSToSQL').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data From Blob Storage To SQL is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MoveFileToProcessedFolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log13",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSPROCESSED",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log9",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied File From PreProcessed Folder to Processed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log10",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('MoveFileToProcessedFolder').Error.Message,0,if(greater(length(activity('MoveFileToProcessedFolder').Error.Message),1990),1990,sub(length(activity('MoveFileToProcessedFolder').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying File From PreProcessed To Processed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DeleteFileFromPreProcessedPath",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log9",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSSTAGE_REM",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "Log11",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('File is deleted from PreProcessed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log12",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('DeleteFileFromPreProcessedPath').Error.Message,0,if(greater(length(activity('DeleteFileFromPreProcessedPath').Error.Message),1990),1990,sub(length(activity('DeleteFileFromPreProcessedPath').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Deleting file from PreProcessed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log13",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStageToOriginal",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Updated Incremental Key Value For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log14",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStageToOriginal",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('LoadStageToOriginal').Error.Message,0,if(greater(length(activity('LoadStageToOriginal').Error.Message),1990),1990,sub(length(activity('LoadStageToOriginal').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Loading data from Stage table to Original table is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LoadStageToOriginal",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log6",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[LOAD_DATA_STAGE_TO_ORIGINAL]",
										"storedProcedureParameters": {
											"INCVALUE": {
												"value": {
													"value": "@item().TimeNow",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJECTLISTID": {
												"value": {
													"value": "@item().OBJECTSLISTID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"LoadType": {
						"type": "string",
						"defaultValue": "Incremental"
					}
				},
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/ObjectsList')]",
				"[concat(variables('factoryId'), '/datasets/Salesforce_Source')]",
				"[concat(variables('factoryId'), '/datasets/ADLSStage')]",
				"[concat(variables('factoryId'), '/datasets/TARGET_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ADLSPROCESSED')]",
				"[concat(variables('factoryId'), '/datasets/ADLSSTAGE_REM')]",
				"[concat(variables('factoryId'), '/linkedServices/logstore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE_INCREMENTAL_LOAD_DATAMODEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select count(1) as ErrorCount from BI.LG_PROCESSLOGS where RunId=','''',string(pipeline().parameters.RunId),'''', ' and Status=','''',string('Error'),'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CheckErrors",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "ErrorCount For the Data Load is fetched",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('GetErrorCount').Error.Message,0,if(greater(length(activity('GetErrorCount').Error.Message),1990),1990,sub(length(activity('GetErrorCount').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Fetch the number of errors in data load",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CheckForErrors",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetErrorCount').output.firstRow.ErrorCount,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load_Dimensions",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ORACLE].[SP_M_INCREMENTAL_LOAD_DIMENSIONS]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Dimensions is completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Dimensions').Error.Message,0,if(greater(length(activity('Load_Dimensions').Error.Message),1990),1990,sub(length(activity('Load_Dimensions').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Dimensions ",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Facts",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ORACLE].[SP_M_INCREMENTAL_FACT_SALES_ORDER]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Facts').Error.Message,0,if(greater(length(activity('Load_Facts').Error.Message),1990),1990,sub(length(activity('Load_Facts').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CheckErrors')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE_LOAD_DATAMODEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select count(1) as ErrorCount from BI.LG_PROCESSLOGS where RunId=','''',string(pipeline().parameters.RunId),'''', ' and Status=','''',string('Error'),'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CheckErrors",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "ErrorCount For the Data Load is fetched",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('GetErrorCount').Error.Message,0,if(greater(length(activity('GetErrorCount').Error.Message),1990),1990,sub(length(activity('GetErrorCount').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Fetch the number of errors in data load",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CheckForErrors",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetErrorCount').output.firstRow.ErrorCount,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load_Dimensions",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ORACLE].[SP_M_FULL_LOAD_DIMENSIONS]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Dimensions is completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Dimensions').Error.Message,0,if(greater(length(activity('Load_Dimensions').Error.Message),1990),1990,sub(length(activity('Load_Dimensions').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Dimensions ",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Facts",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ORACLE].[SP_M_FULL_FACT_SALES_ORDER]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Facts').Error.Message,0,if(greater(length(activity('Load_Facts').Error.Message),1990),1990,sub(length(activity('Load_Facts').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CheckErrors')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE_MAIN_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Calling Oracle Pipeline",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_FULL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Calling DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Calling Oracle Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORACLE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Email Notification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Calling DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_FULL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORACLE_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/linkedServices/EmailService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE_MAIN_INCREMENTAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Calling Oracle Pipeline",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Calling DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Calling Oracle Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORACLE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Email Notification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Calling DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORACLE_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/linkedServices/EmailService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_AZSQLDB_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For Saleforce schema",
				"activities": [
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Process is Started",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FetchTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select SourceSchemaName,SourceObjectName,ObjectType,'['+TargetSchemaName+'].['+TargetObjectName+']' as TargetObjectName, ADLSPreProcessedPath, ADLSProcessedPath, BlobLogsPath,convert(varchar,getdate(),112) as Today,CHECKSUMCOLUMNS,ContainerName From bi.MM_ObjectsList where SourceServer='Salesforce' and IsActive = 1  and LoadType='FULL'"
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Tables to Process are listed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('FetchTables').Error.Message,0,if(greater(length(activity('FetchTables').Error.Message),1990),1990,sub(length(activity('FetchTables').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Listing Tables To Process is Failed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEveryActiveObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Log2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FetchTables').Output.Value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 8,
							"activities": [
								{
									"name": "SalesforceToBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName)",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Salesforce_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SalesforceToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data To Blob Storage For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SalesforceToBlob",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('SalesforceToBlob').Error.Message,0,if(greater(length(activity('SalesforceToBlob').Error.Message),1990),1990,sub(length(activity('SalesforceToBlob').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data To Blob Storage is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ADLSToSQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName)",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "@{concat('TRUNCATE TABLE ',item().TargetObjectName)} ",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Salesforce_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TARGET_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('ADLSToSQL').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data From Blob Storage To SQL For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": {
													"value": "@if(equals(activity('ADLSToSQL').output.rowsCopied,0),'NA',activity('ADLSToSQL').output.redirectRowPath)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log7",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('ADLSToSQL').Error.Message,0,if(greater(length(activity('ADLSToSQL').Error.Message),1990),1990,sub(length(activity('ADLSToSQL').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data From Blob Storage To SQL is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MoveFileToProcessedFolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log6",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSPROCESSED",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log9",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied File From PreProcessed Folder to Processed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log10",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('MoveFileToProcessedFolder').Error.Message,0,if(greater(length(activity('MoveFileToProcessedFolder').Error.Message),1990),1990,sub(length(activity('MoveFileToProcessedFolder').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying File From PreProcessed To Processed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DeleteFileFromPreProcessedPath",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log9",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSSTAGE_REM",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "Log11",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('File is deleted from PreProcessed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log12",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('DeleteFileFromPreProcessedPath').Error.Message,0,if(greater(length(activity('DeleteFileFromPreProcessedPath').Error.Message),1990),1990,sub(length(activity('DeleteFileFromPreProcessedPath').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Deleting file from PreProcessed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"LoadType": {
						"type": "string",
						"defaultValue": "Full"
					}
				},
				"variables": {
					"t1": {
						"type": "String",
						"defaultValue": "test"
					}
				},
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/ObjectsList')]",
				"[concat(variables('factoryId'), '/datasets/Salesforce_Source')]",
				"[concat(variables('factoryId'), '/datasets/ADLSStage')]",
				"[concat(variables('factoryId'), '/datasets/TARGET_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ADLSPROCESSED')]",
				"[concat(variables('factoryId'), '/datasets/ADLSSTAGE_REM')]",
				"[concat(variables('factoryId'), '/linkedServices/logstore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_INCREMENTAL_LOAD_DATAMODEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select count(1) as ErrorCount from BI.LG_PROCESSLOGS where RunId=','''',string(pipeline().parameters.RunId),'''', ' and Status=','''',string('Error'),'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CheckErrors",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "ErrorCount For the Data Load is fetched",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('GetErrorCount').Error.Message,0,if(greater(length(activity('GetErrorCount').Error.Message),1990),1990,sub(length(activity('GetErrorCount').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Fetch the number of errors in data load",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CheckForErrors",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetErrorCount').output.firstRow.ErrorCount,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load_Dimensions",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[salesforce].[SP_M_INCREMENTAL_LOAD_DIMENSIONS]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Dimensions is completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Dimensions').Error.Message,0,if(greater(length(activity('Load_Dimensions').Error.Message),1990),1990,sub(length(activity('Load_Dimensions').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Dimensions ",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Facts",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[salesforce].[SP_M_INCREMENTAL_LOAD_FACT_ENGAGEMENT]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Facts').Error.Message,0,if(greater(length(activity('Load_Facts').Error.Message),1990),1990,sub(length(activity('Load_Facts').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CheckErrors')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_LOAD_DATAMODEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select count(1) as ErrorCount from BI.LG_PROCESSLOGS where RunId=','''',string(pipeline().parameters.RunId),'''', ' and Status=','''',string('Error'),'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CheckErrors",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "ErrorCount For the Data Load is fetched",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('GetErrorCount').Error.Message,0,if(greater(length(activity('GetErrorCount').Error.Message),1990),1990,sub(length(activity('GetErrorCount').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Fetch the number of errors in data load",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CheckForErrors",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetErrorCount').output.firstRow.ErrorCount,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load_Dimensions",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[test]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Dimensions is completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Dimensions').Error.Message,0,if(greater(length(activity('Load_Dimensions').Error.Message),1990),1990,sub(length(activity('Load_Dimensions').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Dimensions ",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Facts",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[test]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Facts').Error.Message,0,if(greater(length(activity('Load_Facts').Error.Message),1990),1990,sub(length(activity('Load_Facts').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CheckErrors')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_MAIN_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Calling Oracle Pipeline",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_AZSQLDB_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Calling DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Calling Oracle Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Email Notification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Calling DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_AZSQLDB_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/linkedServices/EmailService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_MAIN_INCREMENTAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Calling Oracle Pipeline",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_SALESFORCE_AZSSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Calling DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Calling Oracle Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Email Notification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Calling DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_SALESFORCE_AZSSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/linkedServices/EmailService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessAAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('PROCESSAAS?modelname=','CANDELAKPI&ProcessName=',pipeline().Pipeline,'&RunId=',pipeline().RunId)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "ProcessAAS",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProcessAAS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_fact_Ora')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[salesforce].[SP_M_FULL_LOAD_FACT_ENGAGEMENT]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSPROCESSED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(item().SourceObjectName,'.txt')",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@concat(item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().ADLSProcessedPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "\\N",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSSTAGE_REM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"fileName": {
						"value": "[parameters('ADLSSTAGE_REM_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('ADLSSTAGE_REM_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(item().SourceObjectName,'.txt')",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@concat(item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().ADLSPreProcessedPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "\\N",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataControlMaster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HEADER_ID",
						"type": "nvarchar"
					},
					{
						"name": "ORG_ID",
						"type": "nvarchar"
					},
					{
						"name": "ORDER_TYPE_ID",
						"type": "nvarchar"
					},
					{
						"name": "ORDER_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "VERSION_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "EXPIRATION_DATE",
						"type": "nvarchar"
					},
					{
						"name": "ORDER_SOURCE_ID",
						"type": "nvarchar"
					},
					{
						"name": "SOURCE_DOCUMENT_TYPE_ID",
						"type": "nvarchar"
					},
					{
						"name": "ORIG_SYS_DOCUMENT_REF",
						"type": "nvarchar"
					},
					{
						"name": "SOURCE_DOCUMENT_ID",
						"type": "nvarchar"
					},
					{
						"name": "ORDERED_DATE",
						"type": "nvarchar"
					},
					{
						"name": "REQUEST_DATE",
						"type": "nvarchar"
					},
					{
						"name": "PRICING_DATE",
						"type": "nvarchar"
					},
					{
						"name": "SHIPMENT_PRIORITY_CODE",
						"type": "nvarchar"
					},
					{
						"name": "DEMAND_CLASS_CODE",
						"type": "nvarchar"
					},
					{
						"name": "PRICE_LIST_ID",
						"type": "nvarchar"
					},
					{
						"name": "TAX_EXEMPT_FLAG",
						"type": "nvarchar"
					},
					{
						"name": "TAX_EXEMPT_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "TAX_EXEMPT_REASON_CODE",
						"type": "nvarchar"
					},
					{
						"name": "CONVERSION_RATE",
						"type": "nvarchar"
					},
					{
						"name": "CONVERSION_TYPE_CODE",
						"type": "nvarchar"
					},
					{
						"name": "CONVERSION_RATE_DATE",
						"type": "nvarchar"
					},
					{
						"name": "PARTIAL_SHIPMENTS_ALLOWED",
						"type": "nvarchar"
					},
					{
						"name": "SHIP_TOLERANCE_ABOVE",
						"type": "nvarchar"
					},
					{
						"name": "SHIP_TOLERANCE_BELOW",
						"type": "nvarchar"
					},
					{
						"name": "TRANSACTIONAL_CURR_CODE",
						"type": "nvarchar"
					},
					{
						"name": "AGREEMENT_ID",
						"type": "nvarchar"
					},
					{
						"name": "TAX_POINT_CODE",
						"type": "nvarchar"
					},
					{
						"name": "CUST_PO_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "INVOICING_RULE_ID",
						"type": "nvarchar"
					},
					{
						"name": "ACCOUNTING_RULE_ID",
						"type": "nvarchar"
					},
					{
						"name": "PAYMENT_TERM_ID",
						"type": "nvarchar"
					},
					{
						"name": "SHIPPING_METHOD_CODE",
						"type": "nvarchar"
					},
					{
						"name": "FREIGHT_CARRIER_CODE",
						"type": "nvarchar"
					},
					{
						"name": "FOB_POINT_CODE",
						"type": "nvarchar"
					},
					{
						"name": "FREIGHT_TERMS_CODE",
						"type": "nvarchar"
					},
					{
						"name": "SOLD_FROM_ORG_ID",
						"type": "nvarchar"
					},
					{
						"name": "SOLD_TO_ORG_ID",
						"type": "nvarchar"
					},
					{
						"name": "SHIP_FROM_ORG_ID",
						"type": "nvarchar"
					},
					{
						"name": "SHIP_TO_ORG_ID",
						"type": "nvarchar"
					},
					{
						"name": "INVOICE_TO_ORG_ID",
						"type": "nvarchar"
					},
					{
						"name": "DELIVER_TO_ORG_ID",
						"type": "nvarchar"
					},
					{
						"name": "SOLD_TO_CONTACT_ID",
						"type": "nvarchar"
					},
					{
						"name": "SHIP_TO_CONTACT_ID",
						"type": "nvarchar"
					},
					{
						"name": "INVOICE_TO_CONTACT_ID",
						"type": "nvarchar"
					},
					{
						"name": "DELIVER_TO_CONTACT_ID",
						"type": "nvarchar"
					},
					{
						"name": "CREATION_DATE",
						"type": "nvarchar"
					},
					{
						"name": "CREATED_BY",
						"type": "nvarchar"
					},
					{
						"name": "LAST_UPDATED_BY",
						"type": "nvarchar"
					},
					{
						"name": "LAST_UPDATE_DATE",
						"type": "nvarchar"
					},
					{
						"name": "LAST_UPDATE_LOGIN",
						"type": "nvarchar"
					},
					{
						"name": "PROGRAM_APPLICATION_ID",
						"type": "nvarchar"
					},
					{
						"name": "PROGRAM_ID",
						"type": "nvarchar"
					},
					{
						"name": "PROGRAM_UPDATE_DATE",
						"type": "nvarchar"
					},
					{
						"name": "REQUEST_ID",
						"type": "nvarchar"
					},
					{
						"name": "CONTEXT",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE1",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE2",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE3",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE4",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE5",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE6",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE7",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE8",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE9",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE10",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE11",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE12",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE13",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE14",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE15",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE_CATEGORY",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE1",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE2",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE3",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE4",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE5",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE6",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE7",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE8",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE9",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE10",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE11",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE12",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE13",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE14",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE15",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE16",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE17",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE18",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE19",
						"type": "nvarchar"
					},
					{
						"name": "GLOBAL_ATTRIBUTE20",
						"type": "nvarchar"
					},
					{
						"name": "CANCELLED_FLAG",
						"type": "nvarchar"
					},
					{
						"name": "OPEN_FLAG",
						"type": "nvarchar"
					},
					{
						"name": "BOOKED_FLAG",
						"type": "nvarchar"
					},
					{
						"name": "SALESREP_ID",
						"type": "nvarchar"
					},
					{
						"name": "RETURN_REASON_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ORDER_DATE_TYPE_CODE",
						"type": "nvarchar"
					},
					{
						"name": "EARLIEST_SCHEDULE_LIMIT",
						"type": "nvarchar"
					},
					{
						"name": "LATEST_SCHEDULE_LIMIT",
						"type": "nvarchar"
					},
					{
						"name": "PAYMENT_TYPE_CODE",
						"type": "nvarchar"
					},
					{
						"name": "PAYMENT_AMOUNT",
						"type": "nvarchar"
					},
					{
						"name": "CHECK_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "CREDIT_CARD_CODE",
						"type": "nvarchar"
					},
					{
						"name": "CREDIT_CARD_HOLDER_NAME",
						"type": "nvarchar"
					},
					{
						"name": "CREDIT_CARD_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "CREDIT_CARD_EXPIRATION_DATE",
						"type": "nvarchar"
					},
					{
						"name": "CREDIT_CARD_APPROVAL_CODE",
						"type": "nvarchar"
					},
					{
						"name": "SALES_CHANNEL_CODE",
						"type": "nvarchar"
					},
					{
						"name": "FIRST_ACK_CODE",
						"type": "nvarchar"
					},
					{
						"name": "FIRST_ACK_DATE",
						"type": "nvarchar"
					},
					{
						"name": "LAST_ACK_CODE",
						"type": "nvarchar"
					},
					{
						"name": "LAST_ACK_DATE",
						"type": "nvarchar"
					},
					{
						"name": "ORDER_CATEGORY_CODE",
						"type": "nvarchar"
					},
					{
						"name": "CHANGE_SEQUENCE",
						"type": "nvarchar"
					},
					{
						"name": "DROP_SHIP_FLAG",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMER_PAYMENT_TERM_ID",
						"type": "nvarchar"
					},
					{
						"name": "SHIPPING_INSTRUCTIONS",
						"type": "nvarchar"
					},
					{
						"name": "PACKING_INSTRUCTIONS",
						"type": "nvarchar"
					},
					{
						"name": "TP_CONTEXT",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE1",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE2",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE3",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE4",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE5",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE6",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE7",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE8",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE9",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE10",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE11",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE12",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE13",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE14",
						"type": "nvarchar"
					},
					{
						"name": "TP_ATTRIBUTE15",
						"type": "nvarchar"
					},
					{
						"name": "FLOW_STATUS_CODE",
						"type": "nvarchar"
					},
					{
						"name": "MARKETING_SOURCE_CODE_ID",
						"type": "nvarchar"
					},
					{
						"name": "CREDIT_CARD_APPROVAL_DATE",
						"type": "nvarchar"
					},
					{
						"name": "UPGRADED_FLAG",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMER_PREFERENCE_SET_CODE",
						"type": "nvarchar"
					},
					{
						"name": "BOOKED_DATE",
						"type": "nvarchar"
					},
					{
						"name": "LOCK_CONTROL",
						"type": "nvarchar"
					},
					{
						"name": "PRICE_REQUEST_CODE",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE16",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE17",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE18",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE19",
						"type": "nvarchar"
					},
					{
						"name": "ATTRIBUTE20",
						"type": "nvarchar"
					},
					{
						"name": "BATCH_ID",
						"type": "nvarchar"
					},
					{
						"name": "XML_MESSAGE_ID",
						"type": "nvarchar"
					},
					{
						"name": "ACCOUNTING_RULE_DURATION",
						"type": "nvarchar"
					},
					{
						"name": "BLANKET_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "SALES_DOCUMENT_TYPE_CODE",
						"type": "nvarchar"
					},
					{
						"name": "SOLD_TO_PHONE_ID",
						"type": "nvarchar"
					},
					{
						"name": "FULFILLMENT_SET_NAME",
						"type": "nvarchar"
					},
					{
						"name": "LINE_SET_NAME",
						"type": "nvarchar"
					},
					{
						"name": "DEFAULT_FULFILLMENT_SET",
						"type": "nvarchar"
					},
					{
						"name": "ORDER_FIRMED_DATE",
						"type": "nvarchar"
					},
					{
						"name": "TRANSACTION_PHASE_CODE",
						"type": "nvarchar"
					},
					{
						"name": "SALES_DOCUMENT_NAME",
						"type": "nvarchar"
					},
					{
						"name": "QUOTE_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "QUOTE_DATE",
						"type": "nvarchar"
					},
					{
						"name": "USER_STATUS_CODE",
						"type": "nvarchar"
					},
					{
						"name": "DRAFT_SUBMITTED_FLAG",
						"type": "nvarchar"
					},
					{
						"name": "SOURCE_DOCUMENT_VERSION_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "SOLD_TO_SITE_USE_ID",
						"type": "nvarchar"
					},
					{
						"name": "SUPPLIER_SIGNATURE",
						"type": "nvarchar"
					},
					{
						"name": "SUPPLIER_SIGNATURE_DATE",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMER_SIGNATURE",
						"type": "nvarchar"
					},
					{
						"name": "CUSTOMER_SIGNATURE_DATE",
						"type": "nvarchar"
					},
					{
						"name": "MINISITE_ID",
						"type": "nvarchar"
					},
					{
						"name": "END_CUSTOMER_ID",
						"type": "nvarchar"
					},
					{
						"name": "END_CUSTOMER_CONTACT_ID",
						"type": "nvarchar"
					},
					{
						"name": "END_CUSTOMER_SITE_USE_ID",
						"type": "nvarchar"
					},
					{
						"name": "IB_OWNER",
						"type": "nvarchar"
					},
					{
						"name": "IB_CURRENT_LOCATION",
						"type": "nvarchar"
					},
					{
						"name": "IB_INSTALLED_AT_LOCATION",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "OE_ORDER_HEADERS_ALL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataControlMaster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CheckErrors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ProcessName",
						"type": "varchar"
					},
					{
						"name": "Summary",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "ErrorInfo",
						"type": "nvarchar"
					},
					{
						"name": "RunId",
						"type": "varchar"
					},
					{
						"name": "LoggedTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RecordsInSource",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "RecordsCopiedToDest",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SkippedRecordsToMove",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CopyDuration(Seconds)",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "LOGSPATH",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "BI",
					"table": "LG_PROCESSLOGS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DQDataControlMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataControlMaster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataControlMaster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DQTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatControlMaster_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataControlMaster",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@concat(item().SourceObjectName)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataControlMaster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ObjectsList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "[[salesforce].[ACCOUNT]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Salesforce",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "campaign"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Salesforce')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TARGET_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@item().TargetObjectName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsstagetest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test3.csv",
						"folderPath": "test",
						"fileSystem": "salesforce"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "\\N",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testkpidev')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "NAMe",
						"type": "nvarchar"
					},
					{
						"name": "ProductCode",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "testproduct2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "CandelaKPIDev"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataControlMaster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DataControlMaster_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "DataControlMaster"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "CandelaBIADLS"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmailService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "https://candelabifa.azurewebsites.net",
					"functionKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "emailservice"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessAAS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "https://candelabifa.azurewebsites.net",
					"functionKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "processaas"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "https://candelamedical.my.salesforce.com",
					"username": "[parameters('Salesforce_properties_typeProperties_username')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "azureAPI"
					},
					"securityToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "AzureAPISecret"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logstore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('logstore_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "CandelaBIsa"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Schedule')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CANDELAKPI_INCREMENTAL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-10-16T09:00:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CANDELAKPI_INCREMENTAL')]"
			]
		}
	]
}