{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "CANDELABIADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/adlsstagetest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test3.csv",
						"folderPath": "test",
						"fileSystem": "salesforce"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "\\N",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testkpidev')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "NAMe",
						"type": "nvarchar"
					},
					{
						"name": "ProductCode",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "testproduct2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataQualityChecker_Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[DQTableExpressions]",
								"storedProcedureParameters": {
									"DQRId": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.Id",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForAllDQTables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ListTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ListTables').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "OracleSource",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(toUpper(item().SourceServer),'ORACLE')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "OracleLookup",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@if(empty(item().SourceExpression),'SELECT -1 As Counts ',item().SourceExpression)",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "DQDataControlMaster",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								},
								{
									"name": "SalesForceSource",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(toUpper(item().SourceServer),'SALESFORCE')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SalesForceLookup",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SalesforceSource",
														"query": {
															"value": "@if(empty(item().SourceExpression),'SELECT NULL',item().SourceExpression)",
															"type": "Expression"
														},
														"readBehavior": "queryAll"
													},
													"dataset": {
														"referenceName": "Salesforce_Source",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "SalesForceOutput",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "SalesForceLookup",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('Select ',substring(string(activity('SalesForceLookup').output.firstRow),add(indexof(string(activity('SalesForceLookup').output.firstRow),':'),1),sub(sub(length(string(activity('SalesForceLookup').output.firstRow)),indexof(string(activity('SalesForceLookup').output.firstRow),':')),2)),' as Counts')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "DQTarget",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								},
								{
									"name": "TargetLookUp",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@if(empty(item().TargetExpression),'SELECT -1 as counts',item().TargetExpression)",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DQTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "DimLookup",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@if(empty(item().DimExpression),'SELECT -1 as Counts',item().DimExpression)",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DQTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "FactLookup",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@if(empty(item().FactExpression),'SELECT -1 As Counts',item().FactExpression)",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DQTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LogSummary",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "OracleSource",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SalesForceSource",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "TargetLookUp",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "DimLookup",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "FactLookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_LOADDQSUMMARY]",
										"storedProcedureParameters": {
											"DIMCOUNT": {
												"value": {
													"value": "@activity('DimLookup').output.firstRow.Counts",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"DQTID": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"FACTCOUNT": {
												"value": {
													"value": "@activity('FactLookup').output.firstRow.Counts",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunID": {
												"value": {
													"value": "@pipeline().parameters.PipelineRunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SourceCount": {
												"value": {
													"value": "@if(equals(toUpper(item().SourceServer),'ORACLE'),activity('OracleLookup').output.firstRow.Counts,activity('SalesForceOutput').output.firstRow.Counts)",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"TARGETCOUNT": {
												"value": {
													"value": "@activity('TargetLookUp').output.firstRow.Counts",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"PipelineRunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"Id": {
						"type": "string",
						"defaultValue": "-1"
					},
					"RuleName": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FULL_ORACLE_AZSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For Saleforce schema",
				"activities": [
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Process is Started",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FetchTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select SourceSchemaName,SourceObjectName,ObjectType,'['+TargetSchemaName+'].['+TargetObjectName+']' as TargetObjectName, ADLSPreProcessedPath, ADLSProcessedPath, blobLogsPath,convert(varchar,getdate(),112) as Today,CHECKSUMCOLUMNS,ContainerName From bi.MM_ObjectsList where SourceServer='Oracle' and IsActive = 1 and LoadType='FULL' "
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Tables to Process are listed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('FetchTables').Error.Message,0,if(greater(length(activity('FetchTables').Error.Message),1990),1990,sub(length(activity('FetchTables').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Listing Tables To Process is Failed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEveryActiveObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Log2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FetchTables').Output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "OracleToBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatControlMaster_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "OracleToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('OracleToBlob').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data To Blob Storage For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "OracleToBlob",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('OracleToBlob').Error.Message,0,if(greater(length(activity('OracleToBlob').Error.Message),1990),1990,sub(length(activity('OracleToBlob').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data To Blob Storage is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ADLSToSQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "@{concat('TRUNCATE TABLE ',item().TargetObjectName)} ",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatControlMaster_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TARGET_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('ADLSToSQL').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data From Blob Storage To SQL For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": {
													"value": "@if(equals(activity('ADLSToSQL').output.rowsCopied,0),'NA',activity('ADLSToSQL').output.redirectRowPath)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log7",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('ADLSToSQL').Error.Message,0,if(greater(length(activity('ADLSToSQL').Error.Message),1990),1990,sub(length(activity('ADLSToSQL').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data From Blob Storage To SQL is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MoveFileToProcessedFolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log6",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSPROCESSED",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log9",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied File From PreProcessed Folder to Processed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log10",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('MoveFileToProcessedFolder').Error.Message,0,if(greater(length(activity('MoveFileToProcessedFolder').Error.Message),1990),1990,sub(length(activity('MoveFileToProcessedFolder').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying File From PreProcessed To Processed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DeleteFileFromPreProcessedPath",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log9",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSSTAGE_REM",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "Log11",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('File is deleted from PreProcessed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log12",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('DeleteFileFromPreProcessedPath').Error.Message,0,if(greater(length(activity('DeleteFileFromPreProcessedPath').Error.Message),1990),1990,sub(length(activity('DeleteFileFromPreProcessedPath').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Deleting file from PreProcessed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"LoadType": {
						"type": "string",
						"defaultValue": "Full"
					}
				},
				"variables": {
					"t1": {
						"type": "String",
						"defaultValue": "test"
					}
				},
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INCREMENTAL_ORACLE_AZSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For Saleforce schema",
				"activities": [
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Process is Started",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FetchTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "declare @Today datetime=getutcdate()\nselect INC.IncKeyName,INC.IncValue,SourceSchemaName,SourceObjectName,ObjectType,'['+TargetSchemaName+'_STAGE].['+TargetObjectName+']' as TargetObjectName, ADLSPreProcessedPath, ADLSProcessedPath, BlobLogsPath,convert(varchar,@Today,112)+'/'+replace(convert(varchar, @Today, 8),':','') as Today,CHECKSUMCOLUMNS \n,case when INC.INCVALUE is null then '' else 'Where '+  INC.INCKEYNAME+' >= '''+ Convert(Varchar,INC.INCVALUE ,121) + ''' AND ' + INC.INCKEYNAME + ' < ''' + Convert(Varchar,@Today,121) + '''' END AS WhereCondition \n,Convert(Varchar,@Today,121) AS TimeNow,INC.OBJECTSLISTID,OL.ContainerName\nFrom bi.MM_ObjectsList  OL\nINNER join bi.MM_INCREMENTALKEYS INC on INC.objectslistid=OL.ID and INC.type='UPD' and INC.ISACTIVE=1\nwhere OL.SourceServer='Oracle' and OL.IsActive = 1 and OL.LOADTYPE='INCREMENTAL' "
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Tables to Process are listed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('FetchTables').Error.Message,0,if(greater(length(activity('FetchTables').Error.Message),1990),1990,sub(length(activity('FetchTables').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Listing Tables To Process is Failed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEveryActiveObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Log2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FetchTables').Output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "OracleToBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName,' ',item().WhereCondition)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatControlMaster_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "OracleToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('OracleToBlob').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('OracleToBlob').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data To Blob Storage For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "OracleToBlob",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('OracleToBlob').Error.Message,0,if(greater(length(activity('OracleToBlob').Error.Message),1990),1990,sub(length(activity('OracleToBlob').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data To Blob Storage is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ADLSToSQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName,' ',item().WhereCondition)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "@{concat('Truncate Table ',item().TargetObjectName)}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatControlMaster_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TARGET_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('ADLSToSQL').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data From Blob Storage To SQL For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": {
													"value": "@if(equals(activity('ADLSToSQL').output.rowsCopied,0),'NA',activity('ADLSToSQL').output.redirectRowPath)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log7",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('ADLSToSQL').Error.Message,0,if(greater(length(activity('ADLSToSQL').Error.Message),1990),1990,sub(length(activity('ADLSToSQL').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data From Blob Storage To SQL is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MoveFileToProcessedFolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log13",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSPROCESSED",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log9",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied File From PreProcessed Folder to Processed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log10",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('MoveFileToProcessedFolder').Error.Message,0,if(greater(length(activity('MoveFileToProcessedFolder').Error.Message),1990),1990,sub(length(activity('MoveFileToProcessedFolder').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying File From PreProcessed To Processed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DeleteFileFromPreProcessedPath",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log9",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSSTAGE_REM",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "Log11",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('File is deleted from PreProcessed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log12",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('DeleteFileFromPreProcessedPath').Error.Message,0,if(greater(length(activity('DeleteFileFromPreProcessedPath').Error.Message),1990),1990,sub(length(activity('DeleteFileFromPreProcessedPath').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Deleting file from PreProcessed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log13",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStageToOriginal",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Updated Incremental Key Value For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log14",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStageToOriginal",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('LoadStageToOriginal').Error.Message,0,if(greater(length(activity('LoadStageToOriginal').Error.Message),1990),1990,sub(length(activity('LoadStageToOriginal').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Load data from Stage table to Original table is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LoadStageToOriginal",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log6",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[LOAD_DATA_STAGE_TO_ORIGINAL]",
										"storedProcedureParameters": {
											"INCVALUE": {
												"value": {
													"value": "@item().TimeNow",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJECTLISTID": {
												"value": {
													"value": "@item().OBJECTSLISTID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"LoadType": {
						"type": "string",
						"defaultValue": "Incremental"
					}
				},
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INCREMENTAL_SALESFORCE_AZSSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For Saleforce schema",
				"activities": [
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Process is Started",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FetchTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\ndeclare @Today datetime=getutcdate()\nselect INC.IncKeyName,INC.IncValue,SourceSchemaName,SourceObjectName,ObjectType,'['+TargetSchemaName+'_STAGE].['+TargetObjectName+']' as TargetObjectName, ADLSPreProcessedPath, ADLSProcessedPath, BlobLogsPath,convert(varchar,@Today,112)+'/'+replace(convert(varchar, @Today, 8),':','') as Today,CHECKSUMCOLUMNS \n,case when INC.INCVALUE is null then '' else 'Where '+  INC.INCKEYNAME+' >= '+ concat(substring(replace(convert(varchar,INC.INCVALUE,121),' ','T'),1,19),'Z') + ' AND ' + INC.INCKEYNAME + ' < ' + concat(substring(replace(convert(varchar,@Today,121),' ','T'),1,19),'Z') + '' END AS WhereCondition \n,concat(substring(replace(convert(varchar,@Today,121),' ','T'),1,19),'Z')  AS TimeNow,INC.OBJECTSLISTID,OL.ContainerName\nFrom bi.MM_ObjectsList  OL\nINNER join bi.MM_INCREMENTALKEYS INC on INC.objectslistid=OL.ID and INC.type='UPD' and INC.ISACTIVE=1\nwhere OL.SourceServer='Salesforce' and OL.IsActive = 1 and OL.LOADTYPE='INCREMENTAL'"
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Tables to Process are listed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('FetchTables').Error.Message,0,if(greater(length(activity('FetchTables').Error.Message),1990),1990,sub(length(activity('FetchTables').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Listing Tables To Process is Failed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEveryActiveObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Log2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FetchTables').Output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SalesforceToBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName,' ',item().WhereCondition)",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Salesforce_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SalesforceToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data To Blob Storage For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SalesforceToBlob",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('SalesforceToBlob').Error.Message,0,if(greater(length(activity('SalesforceToBlob').Error.Message),1990),1990,sub(length(activity('SalesforceToBlob').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data To Blob Storage is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ADLSToSQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName,' ',item().WhereCondition)",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "@{concat('Truncate Table ',item().TargetObjectName)}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Salesforce_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TARGET_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('ADLSToSQL').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data From Blob Storage To SQL For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": {
													"value": "@if(equals(activity('ADLSToSQL').output.rowsCopied,0),'NA',activity('ADLSToSQL').output.redirectRowPath)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log7",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('ADLSToSQL').Error.Message,0,if(greater(length(activity('ADLSToSQL').Error.Message),1990),1990,sub(length(activity('ADLSToSQL').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data From Blob Storage To SQL is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MoveFileToProcessedFolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log13",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSPROCESSED",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log9",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied File From PreProcessed Folder to Processed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log10",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('MoveFileToProcessedFolder').Error.Message,0,if(greater(length(activity('MoveFileToProcessedFolder').Error.Message),1990),1990,sub(length(activity('MoveFileToProcessedFolder').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying File From PreProcessed To Processed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DeleteFileFromPreProcessedPath",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log9",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSSTAGE_REM",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "Log11",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('File is deleted from PreProcessed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log12",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('DeleteFileFromPreProcessedPath').Error.Message,0,if(greater(length(activity('DeleteFileFromPreProcessedPath').Error.Message),1990),1990,sub(length(activity('DeleteFileFromPreProcessedPath').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Deleting file from PreProcessed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log13",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStageToOriginal",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Updated Incremental Key Value For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log14",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStageToOriginal",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('LoadStageToOriginal').Error.Message,0,if(greater(length(activity('LoadStageToOriginal').Error.Message),1990),1990,sub(length(activity('LoadStageToOriginal').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Loading data from Stage table to Original table is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LoadStageToOriginal",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log6",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[LOAD_DATA_STAGE_TO_ORIGINAL]",
										"storedProcedureParameters": {
											"INCVALUE": {
												"value": {
													"value": "@item().TimeNow",
													"type": "Expression"
												},
												"type": "String"
											},
											"OBJECTLISTID": {
												"value": {
													"value": "@item().OBJECTSLISTID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"LoadType": {
						"type": "string",
						"defaultValue": "Incremental"
					}
				},
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE_INCREMENTAL_LOAD_DATAMODEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select count(1) as ErrorCount from BI.LG_PROCESSLOGS where RunId=','''',string(pipeline().parameters.RunId),'''', ' and Status=','''',string('Error'),'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CheckErrors",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "ErrorCount For the Data Load is fetched",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('GetErrorCount').Error.Message,0,if(greater(length(activity('GetErrorCount').Error.Message),1990),1990,sub(length(activity('GetErrorCount').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Fetch the number of errors in data load",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CheckForErrors",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetErrorCount').output.firstRow.ErrorCount,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load_Dimensions",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ORACLE].[SP_M_INCREMENTAL_LOAD_DIMENSIONS]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Dimensions is completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Dimensions').Error.Message,0,if(greater(length(activity('Load_Dimensions').Error.Message),1990),1990,sub(length(activity('Load_Dimensions').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Dimensions ",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Facts",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ORACLE].[SP_M_INCREMENTAL_FACT_SALES_ORDER]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Facts').Error.Message,0,if(greater(length(activity('Load_Facts').Error.Message),1990),1990,sub(length(activity('Load_Facts').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "UPDATEDATALOADTIME",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Log5",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('UPDATE BI.MM_PROCESSTIMETRACKER SET DATALOADREFRESHTIME= ''',pipeline().parameters.DATALOADPROCESSTIME,''' where ID =1     SELECT 1')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DQTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"DATALOADPROCESSTIME": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE_LOAD_DATAMODEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select count(1) as ErrorCount from BI.LG_PROCESSLOGS where RunId=','''',string(pipeline().parameters.RunId),'''', ' and Status=','''',string('Error'),'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CheckErrors",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "ErrorCount For the Data Load is fetched",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('GetErrorCount').Error.Message,0,if(greater(length(activity('GetErrorCount').Error.Message),1990),1990,sub(length(activity('GetErrorCount').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Fetch the number of errors in data load",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CheckForErrors",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetErrorCount').output.firstRow.ErrorCount,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load_Dimensions",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ORACLE].[SP_M_FULL_LOAD_DIMENSIONS]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Dimensions is completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Dimensions').Error.Message,0,if(greater(length(activity('Load_Dimensions').Error.Message),1990),1990,sub(length(activity('Load_Dimensions').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Dimensions ",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Facts",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Log3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[ORACLE].[SP_M_FULL_FACT_SALES_ORDER]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Facts').Error.Message,0,if(greater(length(activity('Load_Facts').Error.Message),1990),1990,sub(length(activity('Load_Facts').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_AZSQLDB_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For Saleforce schema",
				"activities": [
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Process is Started",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FetchTables",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select SourceSchemaName,SourceObjectName,ObjectType,'['+TargetSchemaName+'].['+TargetObjectName+']' as TargetObjectName, ADLSPreProcessedPath, ADLSProcessedPath, BlobLogsPath,convert(varchar,getdate(),112) as Today,CHECKSUMCOLUMNS,ContainerName From bi.MM_ObjectsList where SourceServer='Salesforce' and IsActive = 1  and LoadType='FULL'"
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Tables to Process are listed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FetchTables",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('FetchTables').Error.Message,0,if(greater(length(activity('FetchTables').Error.Message),1990),1990,sub(length(activity('FetchTables').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline ",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Listing Tables To Process is Failed",
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEveryActiveObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Log2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FetchTables').Output.Value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 8,
							"activities": [
								{
									"name": "SalesforceToBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName)",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Salesforce_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SalesforceToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('SalesforceToBlob').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data To Blob Storage For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log5",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SalesforceToBlob",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('SalesforceToBlob').Error.Message,0,if(greater(length(activity('SalesforceToBlob').Error.Message),1990),1990,sub(length(activity('SalesforceToBlob').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data To Blob Storage is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ADLSToSQL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "@concat('SELECT ',item().CHECKSUMCOLUMNS,' FROM ',item().SourceObjectName)",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "@{concat('TRUNCATE TABLE ',item().TargetObjectName)} ",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Salesforce_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "TARGET_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log6",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('ADLSToSQL').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('ADLSToSQL').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied Data From Blob Storage To SQL For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": {
													"value": "@if(equals(activity('ADLSToSQL').output.rowsCopied,0),'NA',activity('ADLSToSQL').output.redirectRowPath)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log7",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ADLSToSQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('ADLSToSQL').Error.Message,0,if(greater(length(activity('ADLSToSQL').Error.Message),1990),1990,sub(length(activity('ADLSToSQL').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying Data From Blob Storage To SQL is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "MoveFileToProcessedFolder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Log6",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"redirectIncompatibleRowSettings": {
											"linkedServiceName": {
												"referenceName": "logstore",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@concat('candelabiadf','/',item().ContainerName,'/',pipeline().parameters.LoadType,'/',item().BlobLogsPath,item().SourceObjectName,'/',item().Today,'/',pipeline().parameters.RunId)",
												"type": "Expression"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSPROCESSED",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Log9",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.filesRead",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": {
													"value": "@activity('MoveFileToProcessedFolder').output.rowsSkipped",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copied File From PreProcessed Folder to Processed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log10",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "MoveFileToProcessedFolder",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('MoveFileToProcessedFolder').Error.Message,0,if(greater(length(activity('MoveFileToProcessedFolder').Error.Message),1990),1990,sub(length(activity('MoveFileToProcessedFolder').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Copying File From PreProcessed To Processed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DeleteFileFromPreProcessedPath",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log9",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSSTAGE_REM",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "Log11",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('File is deleted from PreProcessed Folder For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log12",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DeleteFileFromPreProcessedPath",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('DeleteFileFromPreProcessedPath').Error.Message,0,if(greater(length(activity('DeleteFileFromPreProcessedPath').Error.Message),1990),1990,sub(length(activity('DeleteFileFromPreProcessedPath').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline ",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": {
													"value": "@concat('Deleting file from PreProcessed Folder is Failed For Table : ',item().SourceObjectName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"LoadType": {
						"type": "string",
						"defaultValue": "Full"
					}
				},
				"variables": {
					"t1": {
						"type": "String",
						"defaultValue": "test"
					}
				},
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_INCREMENTAL_LOAD_DATAMODEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select count(1) as ErrorCount from BI.LG_PROCESSLOGS where RunId=','''',string(pipeline().parameters.RunId),'''', ' and Status=','''',string('Error'),'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CheckErrors",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "ErrorCount For the Data Load is fetched",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('GetErrorCount').Error.Message,0,if(greater(length(activity('GetErrorCount').Error.Message),1990),1990,sub(length(activity('GetErrorCount').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Fetch the number of errors in data load",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CheckForErrors",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetErrorCount').output.firstRow.ErrorCount,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load_Dimensions",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[salesforce].[SP_M_INCREMENTAL_LOAD_DIMENSIONS]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Incremental_Load_Dimension_Success_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Dimensions is completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Incremental_Load_Dimension_Failure_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Dimensions').Error.Message,0,if(greater(length(activity('Load_Dimensions').Error.Message),1990),1990,sub(length(activity('Load_Dimensions').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Dimensions ",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Fact_Engagement",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Incremental_Load_Dimension_Success_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[salesforce].[SP_M_INCREMENTAL_LOAD_FACT_ENGAGEMENT]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Fact_Engagement_Success_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Fact_Engagement",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Fact_Engagement_Failure_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Fact_Engagement",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Fact_Engagement').Error.Message,0,if(greater(length(activity('Load_Fact_Engagement').Error.Message),1990),1990,sub(length(activity('Load_Fact_Engagement').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "UPDATEDATALOADTIME",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Fact_Engagement_Success_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('UPDATE BI.MM_PROCESSTIMETRACKER SET DATALOADREFRESHTIME= ''',pipeline().parameters.DATALOADPROCESSTIME,''' where ID =1     SELECT 1')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "DQTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Load_Facts_Bizible_Attribution",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Incremental_Load_Dimension_Success_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[salesforce].[SP_M_FULL_LOAD_Fact_Bizible_Attribution]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Bizible_attribution_Success_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts_Bizible_Attribution",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Bizible_Attribution_Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Bizible_Attribution_Failure_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Facts_Bizible_Attribution",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Facts_Bizible_Attribution').Error.Message,0,if(greater(length(activity('Load_Facts_Bizible_Attribution').Error.Message),1990),1990,sub(length(activity('Load_Facts_Bizible_Attribution').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					},
					"DATALOADPROCESSTIME": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_LOAD_DATAMODEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select count(1) as ErrorCount from BI.LG_PROCESSLOGS where RunId=','''',string(pipeline().parameters.RunId),'''', ' and Status=','''',string('Error'),'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "CheckErrors",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Log1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "ErrorCount For the Data Load is fetched",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "GetErrorCount",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('GetErrorCount').Error.Message,0,if(greater(length(activity('GetErrorCount').Error.Message),1990),1990,sub(length(activity('GetErrorCount').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().parameters.RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Fetch the number of errors in data load",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CheckForErrors",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Log1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetErrorCount').output.firstRow.ErrorCount,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load_Dimensions",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[test]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Full_Load_Dimensions_Success_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Dimensions is completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Full_Load_Dimensions_Failure_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Dimensions",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Dimensions').Error.Message,0,if(greater(length(activity('Load_Dimensions').Error.Message),1990),1990,sub(length(activity('Load_Dimensions').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Dimensions ",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Fact_Engagement",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Full_Load_Dimensions_Success_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[test]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Fact_Engagement_Success_Failure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Fact_Engagement",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Fact_Engagement_Failure_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Fact_Engagement",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Fact_Engagement').Error.Message,0,if(greater(length(activity('Load_Fact_Engagement').Error.Message),1990),1990,sub(length(activity('Load_Fact_Engagement').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Load_Fact_Bizible_Attribution",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Full_Load_Dimensions_Success_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[test]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Fact_Bizible_Attribution_Success_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Fact_Bizible_Attribution",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": null,
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "INFO",
												"type": "String"
											},
											"Summary": {
												"value": "Loading Fact tables are completed successfully",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Fact_Bizible_Attribution_Failure_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Load_Fact_Bizible_Attribution",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[BI].[SP_M_Logger]",
										"storedProcedureParameters": {
											"CopyDuration": {
												"value": null,
												"type": "Int64"
											},
											"ErrorInfo": {
												"value": {
													"value": "@substring(activity('Load_Fact_Bizible_Attribution').Error.Message,0,if(greater(length(activity('Load_Fact_Bizible_Attribution').Error.Message),1990),1990,sub(length(activity('Load_Fact_Bizible_Attribution').Error.Message),2)))",
													"type": "Expression"
												},
												"type": "String"
											},
											"LOGSPATH": {
												"value": null,
												"type": "String"
											},
											"ProcessName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecordsCopiedToDest": {
												"value": null,
												"type": "Int64"
											},
											"RecordsInSource": {
												"value": null,
												"type": "Int64"
											},
											"RunId": {
												"value": {
													"value": "@pipeline().parameters.RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"SkippedRecordsToMove": {
												"value": null,
												"type": "Int64"
											},
											"Status": {
												"value": "ERROR",
												"type": "String"
											},
											"Summary": {
												"value": "Failed to Load Fact Tables",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"RunId": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceQueryTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": "Select Count() From ACCOUNT  ",
								"readBehavior": "queryAll"
							},
							"dataset": {
								"referenceName": "Salesforce_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select ',substring(string(activity('Lookup1').output.firstRow),add(indexof(string(activity('Lookup1').output.firstRow),':'),1),sub(sub(length(string(activity('Lookup1').output.firstRow)),indexof(string(activity('Lookup1').output.firstRow),':')),2)),' as Counts')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DQTarget",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": "select * from account",
								"readBehavior": "queryAll"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Salesforce_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"value": {
						"type": "String",
						"defaultValue": "-1"
					},
					"value1": {
						"type": "String",
						"defaultValue": "-1"
					},
					"value2": {
						"type": "String",
						"defaultValue": "-1"
					},
					"value3": {
						"type": "String",
						"defaultValue": "-1"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataQualityChecker_Rule')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List the Rules",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT *\n  FROM [BI].[DataQualityRules] Where Isactive=1"
							},
							"dataset": {
								"referenceName": "ObjectsList",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DQTableLoop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List the Rules",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List the Rules').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DataQualityTable",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DataQualityChecker_Table",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"PipelineRunId": {
												"value": "@pipeline().parameters.PipelineRunId",
												"type": "Expression"
											},
											"Id": {
												"value": "@item().Id",
												"type": "Expression"
											},
											"RuleName": {
												"value": "@item().DQRuleName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"PipelineRunId": {
						"type": "string",
						"defaultValue": "-1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DataQualityChecker_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CANDELAKPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Combination of Oracle and Salesforce data load",
				"activities": [
					{
						"name": "Oracle_Full_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_FULL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Oracle_Incremental_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Incremental"
							}
						}
					},
					{
						"name": "Salesforce_Full_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_AZSQLDB_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Salesforce_Incremental_Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_SALESFORCE_AZSSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Incremental"
							}
						}
					},
					{
						"name": "SalesForce_DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Salesforce_Incremental_Load",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Salesforce_Full_Load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Oracle_DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Oracle_Incremental_Load",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Oracle_Full_Load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORACLE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ProcessAAS",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "SalesForce_DataModel",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Oracle_DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('PROCESSAAS?modelname=','EngagementKPI&ProcessName=',pipeline().Pipeline,'&RunId=',pipeline().RunId)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "ProcessAAS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log31",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Processing AAS Model is completed successfully",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log32",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": {
										"value": "@substring(activity('ProcessAAS').Error.Message,0,if(greater(length(activity('ProcessAAS').Error.Message),1990),1990,sub(length(activity('ProcessAAS').Error.Message),2)))",
										"type": "Expression"
									},
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "ERROR",
									"type": "String"
								},
								"Summary": {
									"value": "Failed to Process AAS Model",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EmailNotification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_FULL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_AZSQLDB_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_SALESFORCE_AZSSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORACLE_LOAD_DATAMODEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE_MAIN_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Calling Oracle Pipeline",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_FULL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Calling DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Calling Oracle Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORACLE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Email Notification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Calling DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_FULL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORACLE_LOAD_DATAMODEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORACLE_MAIN_INCREMENTAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Calling Oracle Pipeline",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Calling DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Calling Oracle Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORACLE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Email Notification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Calling DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Oracle"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORACLE_LOAD_DATAMODEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_MAIN_FULL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Calling Oracle Pipeline",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_AZSQLDB_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Calling DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Calling Oracle Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Email Notification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Calling DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_AZSQLDB_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_LOAD_DATAMODEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SALESFORCE_MAIN_INCREMENTAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Calling Oracle Pipeline",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_SALESFORCE_AZSSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Calling DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Calling Oracle Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Email Notification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Calling DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "SalesForce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_SALESFORCE_AZSSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_LOAD_DATAMODEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CANDELAKPI_INCREMENTAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Combination of Oracle and Salesforce data load",
				"activities": [
					{
						"name": "Oracle_Full_Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DATALOADTIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_FULL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Oracle_Incremental_Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DATALOADTIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_ORACLE_AZSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Incremental"
							}
						}
					},
					{
						"name": "Salesforce_Full_Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DATALOADTIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_AZSQLDB_FULL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Full"
							}
						}
					},
					{
						"name": "Salesforce_Incremental_Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DATALOADTIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_INCREMENTAL_SALESFORCE_AZSSQLDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"LoadType": "Incremental"
							}
						}
					},
					{
						"name": "SalesForce_DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Salesforce_Incremental_Load",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Salesforce_Full_Load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SALESFORCE_INCREMENTAL_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DATALOADPROCESSTIME": {
									"value": "@variables('DATALOADPROCESSTIME')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Oracle_DataModel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Oracle_Incremental_Load",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Oracle_Full_Load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ORACLE_INCREMENTAL_LOAD_DATAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"RunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DATALOADPROCESSTIME": {
									"value": "@variables('DATALOADPROCESSTIME')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ProcessAAS",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "SalesForce_DataModel",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Oracle_DataModel",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('PROCESSAAS?modelname=','EngagementKPI&ProcessName=',pipeline().Pipeline,'&RunId=',pipeline().RunId)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "ProcessAAS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log31",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[BI].[SP_M_Logger]",
							"storedProcedureParameters": {
								"CopyDuration": {
									"value": null,
									"type": "Int64"
								},
								"ErrorInfo": {
									"value": null,
									"type": "String"
								},
								"LOGSPATH": {
									"value": null,
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsCopiedToDest": {
									"value": null,
									"type": "Int64"
								},
								"RecordsInSource": {
									"value": null,
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SkippedRecordsToMove": {
									"value": null,
									"type": "Int64"
								},
								"Status": {
									"value": "INFO",
									"type": "String"
								},
								"Summary": {
									"value": "Processing AAS Model is completed successfully",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EmailNotification",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('SendEmail?RunId=',pipeline().RunId,'&ProcessName=',pipeline().Pipeline)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "EmailService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DATALOADTIME",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DATALOADPROCESSTIME",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UPDATEDAASPROCESSTIME",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('UPDATE BI.MM_PROCESSTIMETRACKER SET AASPROCESSREFRESHTIME= ''',variables('DATALOADPROCESSTIME'),''' where ID =1     SELECT 1')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "DQTarget",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DQVALIDATION",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ProcessAAS",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataQualityChecker_Rule",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"variables": {
					"DATALOADPROCESSTIME": {
						"type": "String",
						"defaultValue": "NULL"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_FULL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_ORACLE_AZSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_AZSQLDB_FULL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_INCREMENTAL_SALESFORCE_AZSSQLDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SALESFORCE_INCREMENTAL_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ORACLE_INCREMENTAL_LOAD_DATAMODEL')]",
				"[concat(variables('factoryId'), '/pipelines/DataQualityChecker_Rule')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Schedule')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CANDELAKPI_INCREMENTAL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-10-16T09:00:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CANDELAKPI_INCREMENTAL')]"
			]
		}
	]
}